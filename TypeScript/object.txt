# L√Ω thuy·∫øt v·ªÅ Object Types trong TypeScript

**Object Types** l√† n·ªÅn t·∫£ng c·ªßa h·ªá th·ªëng type trong TypeScript, c·ª±c k·ª≥ quan tr·ªçng trong test automation. Ch√∫ng gi√∫p m√¥ t·∫£ c·∫•u tr√∫c d·ªØ li·ªáu ph·ª©c t·∫°p, ƒë·∫£m b·∫£o t√≠nh nh·∫•t qu√°n v√† gi·∫£m l·ªói khi l√†m vi·ªác v·ªõi d·ªØ li·ªáu.

## ·ª®ng d·ª•ng ph·ªï bi·∫øn c·ªßa Object Types

- **Page Objects**: ƒê·∫°i di·ªán cho UI elements & c√°c thao t√°c t∆∞∆°ng t√°c.
- **Test Data**: L∆∞u tr·ªØ d·ªØ li·ªáu ng∆∞·ªùi d√πng, form input, test scenario.
- **API Responses**: M√¥ t·∫£ c√°c response ph·ª©c t·∫°p t·ª´ server.
- **Configuration Objects**: Qu·∫£n l√Ω setting test, m√¥i tr∆∞·ªùng, browser options.

üëâ **Object Types** gi√∫p ƒë·∫£m b·∫£o c·∫•u tr√∫c d·ªØ li·ªáu nh·∫•t qu√°n, d·ªÖ d·ª± ƒëo√°n, gi·∫£m l·ªói khi ph√°t tri·ªÉn v√† ki·ªÉm th·ª≠.

---

## üìù C√∫ ph√°p c∆° b·∫£n

```typescript
let user: { name: string; age: number; active: boolean } = {
  name: "Alice",
  age: 28,
  active: true
};
```
- Inline type annotation gi√∫p m√¥ t·∫£ r√µ r√†ng c·∫•u tr√∫c object.

---

## üîπ Optional Properties

D√πng d·∫•u `?` ƒë·ªÉ ch·ªâ ra property c√≥ th·ªÉ c√≥ ho·∫∑c kh√¥ng.

```typescript
type TestConfig = {
  environment: string;
  retries?: number; // optional
};
```

---

## üîπ Readonly Properties

D√πng `readonly` ƒë·ªÉ ngƒÉn vi·ªác g√°n l·∫°i gi√° tr·ªã cho property.

```typescript
type User = {
  readonly id: string;
  name: string;
};
```

---

## üîπ Index Signatures

Cho ph√©p ƒë·ªãnh nghƒ©a object v·ªõi key ƒë·ªông, ph√π h·ª£p cho c√°c tr∆∞·ªùng h·ª£p d·ªØ li·ªáu kh√¥ng c·ªë ƒë·ªãnh.

```typescript
type ApiResponse = {
  [key: string]: string | number;
};
```

---

## üîπ Nested Objects

Object c√≥ th·ªÉ ch·ª©a object kh√°c b√™n trong, gi√∫p m√¥ t·∫£ c·∫•u tr√∫c ph·ª©c t·∫°p.

```typescript
type Page = {
  title: string;
  elements: {
    header: string;
    footer: string;
  };
};
```

---

## üîπ Automation-Specific Types

V√≠ d·ª• c√°c ki·ªÉu object th∆∞·ªùng d√πng trong test automation:

```typescript
type Locator = {
  selector: string;
  action: "click" | "type" | "hover";
};

type PageObject = {
  name: string;
  url: string;
  locators: Locator[];
};
```

---

**T√≥m l·∫°i:**  
Object Types l√† c√¥ng c·ª• m·∫°nh m·∫Ω gi√∫p b·∫°n ki·ªÉm so√°t, m√¥ t·∫£ v√† b·∫£o v·ªá c·∫•u tr√∫c d·ªØ li·ªáu trong c√°c d·ª± √°n test automation v·ªõi